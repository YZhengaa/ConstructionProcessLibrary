@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix schema: <http://schema.org/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix bot: <https://w3id.org/bot#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix ex: <http://example.aalto.fi#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix dicp: <https://w3id.org/digitalconstruction/0.5/Processes#> .
@prefix dice: <https://w3id.org/digitalconstruction/0.5/Entities#> .
@prefix dicv: <https://w3id.org/digitalconstruction/0.5/Variables#> .
@prefix dica: <https://w3id.org/digitalconstruction/0.5/Agents#> .
@prefix dicm: <https://w3id.org/digitalconstruction/0.5/Materials#> .
@prefix time: <http://www.w3.org/2006/time#> .


ex:DrywallIndoorPositioningRuleShape a sh:NodeShape,rdfs:Class;
sh:targetClass dice:Agent;
  sh:sparql [
        a sh:SPARQLConstraint ;
        sh:prefixes ex: ;
        sh:prefixes dicv: ;
        sh:prefixes dicp: ;
        sh:prefixes dici: ;
        sh:prefixes dice: ;
        sh:prefixes rdfs: ;
        sh:message "Presence of worker is sufficient, worker is performing in scheduled location;
        sh:select """
            PREFIX ex: <http://example.aalto.fi#>
            PREFIX dicp: <https://w3id.org/digitalconstruction/0.5/Processes#>
            PREFIX dice: <https://w3id.org/digitalconstruction/0.5/Entities#> 
            PREFIX dicv: <https://w3id.org/digitalconstruction/0.5/Variables#> 
            PREFIX dici: <https://w3id.org/digitalconstruction/0.5/Information#>
            SELECT $this 
            WHERE {
                $this a dice:Agent .
                $this dicv:hasProperty ?locationproperty .
                ?locationproperty a dicv:Property.
                ?locationproperty dicv:hasPropertyState ?locationpropertystate .
              	?locationpropertystate a dicv:PropertyState .
                ?locationpropertystate dicv:hasValue ?location .
              	?activity dicp:hasEndTime ?ActivityEndTime  .
                ?activity dicp:hasStartTime ?ActivityStartTime  .
                ?activity dicp:hasLocation ?ActivityLocation  .
                ?activity dicp:hasAgent  $this .
                ?location a dice:Location .
                ?ActivityLocation a dice:Location .
                ?observation a dice:Observation .
                ?observation dicp:hasObservedProperty ?locationproperty .
                ?observation sosa:hasStartTime ?ObservationStartTime .
                ?observation sosa:hasEndTime ?ObservationEndTime .
                ?observation sosa:hasDuration ?duration .
                FILTER (((?ActivityLocation =?location && SUM(?duration) > "10" &&?ObservationStartTime > ?ActivityStartTime && ?ObservationEndTime <?ActivityEndTime) .
            }
            """
    ]; 
  sh:sparql [
        a sh:SPARQLConstraint ;
        sh:prefixes ex: ;
        sh:prefixes dicv: ;
        sh:prefixes dicp: ;
        sh:prefixes dici: ;
        sh:prefixes dice: ;
        sh:prefixes rdfs: ;
        sh:message "Presence of worker is insufficient, worker is not performing in scheduled location;
         sh:select """
            PREFIX ex: <http://example.aalto.fi#>
            PREFIX dicp: <https://w3id.org/digitalconstruction/0.5/Processes#>
            PREFIX dice: <https://w3id.org/digitalconstruction/0.5/Entities#> 
            PREFIX dicv: <https://w3id.org/digitalconstruction/0.5/Variables#> 
            PREFIX dici: <https://w3id.org/digitalconstruction/0.5/Information#>
            SELECT $this 
            WHERE {
                $this a dice:Agent .
                $this dicv:hasProperty ?locationproperty .
                ?locationproperty a dicv:Property.
                ?locationproperty dicv:hasPropertyState ?locationpropertystate .
              	?locationpropertystate a dicv:PropertyState .
                ?locationpropertystate dicv:hasValue ?location .
              	?activity dicp:hasEndTime ?ActivityEndTime  .
                ?activity dicp:hasStartTime ?ActivityStartTime  .
                ?activity dicp:hasLocation ?ActivityLocation  .
                ?activity dicp:hasAgent  $this .
                ?location a dice:Location .
                ?ActivityLocation a dice:Location .
                ?observation a dice:Observation .
                ?observation dicp:hasObservedProperty ?locationproperty .
                ?observation sosa:hasStartTime ?ObservationStartTime .
                ?observation sosa:hasEndTime ?ObservationEndTime .
                ?observation sosa:hasDuration ?duration .
                FILTER (((?ActivityLocation =?location && SUM(?duration) < "10" && ?ObservationStartTime > ?ActivityStartTime &&? ObservationEndTime <?ActivityEndTime) .
            }
            """
    ].
